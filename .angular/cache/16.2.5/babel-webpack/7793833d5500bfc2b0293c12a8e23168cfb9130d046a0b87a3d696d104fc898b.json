{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/file-services\";\nconst _c0 = [\"imageElement\"];\nexport class ImageViewerComponent {\n  constructor(fileService) {\n    this.fileService = fileService;\n    this.imageBlob = null;\n  }\n  ngOnInit() {\n    console.log(\"fileId: \" + this.fileId);\n    if (this.fileId) {\n      this.fileService.getFileById(this.fileId).subscribe({\n        next: data => {\n          this.imageBlob = data;\n          this.displayImage();\n        },\n        error: error => {\n          console.error('API isteği başarısız:', error);\n        },\n        complete: () => {\n          // İşlem tamamlandığında yapılacak işlemler (isteğe bağlı)\n        }\n      });\n    }\n  }\n  displayImage() {\n    if (this.imageBlob !== null) {\n      const imageUrl = URL.createObjectURL(this.imageBlob);\n      this.imageElement.nativeElement.src = imageUrl;\n    }\n  }\n  static #_ = this.ɵfac = function ImageViewerComponent_Factory(t) {\n    return new (t || ImageViewerComponent)(i0.ɵɵdirectiveInject(i1.FileService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ImageViewerComponent,\n    selectors: [[\"app-image-viewer\"]],\n    viewQuery: function ImageViewerComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.imageElement = _t.first);\n      }\n    },\n    inputs: {\n      fileId: \"fileId\"\n    },\n    decls: 3,\n    vars: 1,\n    consts: [[\"alt\", \"Resim\"], [\"imageElement\", \"\"]],\n    template: function ImageViewerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"img\", 0, 1);\n        i0.ɵɵtext(2);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\\n\", ctx.fileId, \"\");\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["ImageViewerComponent","constructor","fileService","imageBlob","ngOnInit","console","log","fileId","getFileById","subscribe","next","data","displayImage","error","complete","imageUrl","URL","createObjectURL","imageElement","nativeElement","src","_","i0","ɵɵdirectiveInject","i1","FileService","_2","selectors","viewQuery","ImageViewerComponent_Query","rf","ctx","ɵɵelement","ɵɵtext","ɵɵadvance","ɵɵtextInterpolate1"],"sources":["C:\\Users\\Ali.yildirim\\Desktop\\BerkayRentaCar\\Berkay Github\\RentACar.UI\\src\\app\\image-viewer\\image-viewer.component.ts","C:\\Users\\Ali.yildirim\\Desktop\\BerkayRentaCar\\Berkay Github\\RentACar.UI\\src\\app\\image-viewer\\image-viewer.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild, ElementRef, Input, AfterViewInit, AfterContentInit } from '@angular/core';\nimport { FileService } from '../services/file-services';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-image-viewer',\n  templateUrl: './image-viewer.component.html',\n  styleUrls: ['./image-viewer.component.css']\n})\nexport class ImageViewerComponent implements OnInit {\n  imageBlob: Blob | null = null;\n  @Input() fileId: any;\n\n  @ViewChild('imageElement') imageElement: ElementRef;\n\n  constructor(private fileService: FileService) {}\n\n  ngOnInit(): void {\n    console.log(\"fileId: \" + this.fileId);\n    if (this.fileId) {\n      this.fileService.getFileById(this.fileId).subscribe({\n        next: (data: Blob) => {\n          this.imageBlob = data;\n          this.displayImage();\n        },\n        error: (error) => {\n          console.error('API isteği başarısız:', error);\n        },\n        complete: () => {\n          // İşlem tamamlandığında yapılacak işlemler (isteğe bağlı)\n        }\n      });\n    }\n  }\n\n  displayImage(): void {\n    if (this.imageBlob !== null) {\n      const imageUrl = URL.createObjectURL(this.imageBlob);\n      this.imageElement.nativeElement.src = imageUrl;\n    }\n  }\n}\n","<img #imageElement alt=\"Resim\">\r\n{{fileId}}"],"mappings":";;;AASA,OAAM,MAAOA,oBAAoB;EAM/BC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAL/B,KAAAC,SAAS,GAAgB,IAAI;EAKkB;EAE/CC,QAAQA,CAAA;IACNC,OAAO,CAACC,GAAG,CAAC,UAAU,GAAG,IAAI,CAACC,MAAM,CAAC;IACrC,IAAI,IAAI,CAACA,MAAM,EAAE;MACf,IAAI,CAACL,WAAW,CAACM,WAAW,CAAC,IAAI,CAACD,MAAM,CAAC,CAACE,SAAS,CAAC;QAClDC,IAAI,EAAGC,IAAU,IAAI;UACnB,IAAI,CAACR,SAAS,GAAGQ,IAAI;UACrB,IAAI,CAACC,YAAY,EAAE;QACrB,CAAC;QACDC,KAAK,EAAGA,KAAK,IAAI;UACfR,OAAO,CAACQ,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC/C,CAAC;QACDC,QAAQ,EAAEA,CAAA,KAAK;UACb;QAAA;OAEH,CAAC;;EAEN;EAEAF,YAAYA,CAAA;IACV,IAAI,IAAI,CAACT,SAAS,KAAK,IAAI,EAAE;MAC3B,MAAMY,QAAQ,GAAGC,GAAG,CAACC,eAAe,CAAC,IAAI,CAACd,SAAS,CAAC;MACpD,IAAI,CAACe,YAAY,CAACC,aAAa,CAACC,GAAG,GAAGL,QAAQ;;EAElD;EAAC,QAAAM,CAAA,G;qBA/BUrB,oBAAoB,EAAAsB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAApB1B,oBAAoB;IAAA2B,SAAA;IAAAC,SAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;;;;;;;;;;;;;;;QCTjCR,EAAA,CAAAU,SAAA,gBAA+B;QAC/BV,EAAA,CAAAW,MAAA,GAAU;;;QAAVX,EAAA,CAAAY,SAAA,GAAU;QAAVZ,EAAA,CAAAa,kBAAA,OAAAJ,GAAA,CAAAxB,MAAA,KAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}